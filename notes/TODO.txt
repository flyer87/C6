- .Net Framework design guidelines
- Patterns - p.149
	- C#6.0 additions
---Prelez---
====
- try to get how the tag staff in the views work	
	
- Double, triplle check C6.ArrayList with the view extensions I did.
	//- remove RequierValidity
		//- put isValid
	//- fixViews... - on their places
		Where: look C5
	//- Offset+, where:
		index, i, count
		// GetHashCode never used ?
				
	//- implement private void Dipose()
	//- run the tests
	- private indexOf, lastIndexOf
	============
	- invalidate
	
- fix: Insert and this[] - they shoudl either throw an exception or require a precondition.

//- implement Span
//- look at the test patterns of C6
//- look at the C5's view tests
- write tests for the views (of ArrayList; HashedArrayList; LinkedList; HashedLinkedList)
	- test refernce list tests for
		Peter's tests // View, ViewOf, LastViewOf, TrySlide x2, Slide x2	
			Test case 1/9 using
			View
			ViewOf
			LastViewOf			
			Slide1, Slide2, 
			TrySlide1, TrySlide2
	//- Span - implement tests
	- IsValid tests	
	

//- edit the failing tests
	//- 54 : 2
	//- fluctuating tests still ???
//- read for Test Driven ??? TDD - links
- implement some missing tests in C6
	_ReadOnlyCollection_
	_FixedSizeCollection_
	//_DuplicatesByCounting_ - will not be considered
	_Set_ ???		
- collect the "???" from the .cs files !!! Re-look at them
- Think of General View tests
=================
- Code Contracts for private methods - look and do it the same way for the rest.
	Code contracts warnmed me for that ???
=========