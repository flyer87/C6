TODO:
	Add "virtual" to other properties/ methods ? So far only IExtensible p,m's
	
	//!Check for Code contracts after implementation of IExtensible	
	- public bool UnsequencedEquals(ICollection<T> otherCollection)        
		Peter's is different
	
		
	RemoveWhere		
		RemoveRange
			RemoveDuplicates
		RetainRange
		
	- private sealed class ItemSet : CollectionValueBase<T>, ICollectionValue<T> // ??? CollectionValues base
	- ADD: ObjectInvariants
	- FindOrAdd_FindItemDuringEnumeration_ThrowsNothing()
		throws Code Contratcs error if:
		 in Find(ref T item)
			propusna item = node.item;
	- Array.Copy() how does it work? Using enumerator or ?
	- What is diff. between IList and IList<T>
	? Using SynchRoot for thread-safety ?
	- RaiseForInsert(int index, T item)
		, but OnItemInserted(item, index): switched positions
	- C5.LinkedList.InsertFirst - if (ActiveEvents != EventTypeEnum.None)
		- C6.arraylist.InsertFirst - nothing
		- me.LinkedList - if (!ActiveEvents.HasFlag(Inserted)) ???
	- raiseFor
		raiseForSetThis in C5.LinkedList.public virtual T this[int index]
		- index or Offset + index
		P.S. I also have in ArrayList
	- remove Print() from IList
======
View:
	View changes in the methods:
		- RaiseFor - incl Offset
	GetPairPrivate() // why out _starSentinel	
		try to undertsand how it and its subfucntions work
===========
C5:
	void InsertAll(int i, SCG.IEnumerable<T> items, bool insertion)
	redundant: if (count > 0) {}
=========
Tests:
	- ExpectedDirectedCollectionValue. Why no we need a class ???
	
================
Thesis notes:	
	it was: private void raiseForInsertAll(Node node, int i, int added, bool insertion)
	now: private void RaiseForAddRange(SCG.IEnumerable<T> items)
	- get -> getNode
	find() and dnif - were combined with usage of Eumeration direction as paramter
	- raiseFor: index mismatches
	- redundant else's in C5.LinkedList
		public virtual bool IsSorted(SCG.IComparer<T> c)
	- public virtual bool IsSorted(Comparison<T> comparison) - new method, not exisitn in C5. Is it in C6's documentaion?	
		
            